<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web | Wendi's Blog]]></title>
  <link href="http://blog.ifyouseewendy.com/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://blog.ifyouseewendy.com/"/>
  <updated>2015-12-06T15:02:18+08:00</updated>
  <id>http://blog.ifyouseewendy.com/</id>
  <author>
    <name><![CDATA[wendi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Annoying OAuth Issue on HTTP URL Encoding]]></title>
    <link href="http://blog.ifyouseewendy.com/blog/2015/03/04/annoying-oauth-issue-on-http-url-encoding/"/>
    <updated>2015-03-04T17:46:12+08:00</updated>
    <id>http://blog.ifyouseewendy.com/blog/2015/03/04/annoying-oauth-issue-on-http-url-encoding</id>
    <content type="html"><![CDATA[<p>I was developing and maintaining an OAuth service using <code>pelle/oauth-plugin</code> gem. Other than the standard token exchange process, there is a need to authenticate by signature based on user’s passed in parameters. As custom parameters can include custom charactors, here comes the space encoding issue.</p>

<ul>
  <li>Why the service approves my test script by passing <code>name=wendi</code> but refuses <code>name=Di Wen</code> ?</li>
  <li>Why the <code>CGI.escape('Di Wen')</code> outputs <code>"Di+Wen"</code>, while <code>URI.escape('Di Wen')</code> outpus <code>Di%20Wen</code> ?</li>
</ul>

<p>This is definitely an annoying issue. I’ve run into it sometime before, but today I need to make a clear mind.</p>

<p><strong>What’s the HTTP standard way to encode space in URL?</strong></p>

<p><code>%20</code>, according to the <a href="http://www.w3schools.com/tags/ref_urlencode.asp">HTML URL Encoding Reference</a> by W3schools.</p>

<p><strong>Why the hell some libary encode space to <code>+</code>?</strong></p>

<p>Because of the <code>application/x-www-form-urlencoded</code> <em>MIME</em> type.</p>

<p>Refered to Wikipedia, <a href="http://en.wikipedia.org/wiki/Percent-encoding#The_application.2Fx-www-form-urlencoded_type">Percent Encoding</a></p>

<blockquote>
  <p>The encoding used by default is based on a very early version of the general URI percent-encoding rules, with a number of modifications such as newline normalization and replacing spaces with “+” instead of “%20”. The Internet media type of data encoded this way is application/x-www-form-urlencoded, and it is currently defined (still in a very outdated manner) in the HTML and XForms specifications.</p>
</blockquote>

<p>And <a href="http://stackoverflow.com/users/634419/anomie">Anomie</a> has a summary <a href="http://stackoverflow.com/a/5433216/1331774">answer</a>,</p>

<blockquote>
  <p>The query string format is actually a different but related encoding, application/x-www-form-urlencoded, defined in RFC 1866 along with HTML 2.0. It was based on RFC 1738, but specified that spaces (not all whitespace, just the character with ASCII code 0x20) are replaced by ‘+’ and that line breaks are to be encoded as CRLF (i.e. %0D%0A). The former is likely because that saves 2 bytes for a very common character in form submissions at the expense of using an extra 2 bytes for a much less common character, and the latter is to avoid problems when transferring between systems using different end-of-line codings. Non-ASCII characters were left unconsidered.</p>
</blockquote>

<blockquote>
  <p>UTF-8 coding in URIs came over a decade later, in RFC 3986, although individual protocols may have specified this or another encoding of non-ASCII characters earlier. To maintain backwards compatibility, all UTF-8 octets must be percent-encoded.</p>
</blockquote>

<p><strong>What’s the Rule of Thumb in Ruby world?</strong></p>

<p><a href="http://stackoverflow.com/users/409475/ernest">Ernest</a> makes a <a href="http://stackoverflow.com/questions/2824126/whats-the-difference-between-uri-escape-and-cgi-escape">specification</a> about the escape methods over <code>URI</code>, <code>CGI</code>, and <code>Addressable</code>, and gives a conclusion</p>

<blockquote>
  <ul>
    <li>Do not use URI.escape or similar</li>
    <li>Use CGI::escape if you only need form escape</li>
    <li>If you need to work with URIs, use Addressable, it offers url encoding, form encoding and normalizes URLs.</li>
  </ul>
</blockquote>

<p><strong>So, what’s the solution to my question?</strong></p>

<p>The <code>pelle/oauth-plugin</code> gem failed my test script with <code>CGI</code> by</p>

<p>```ruby
pry(main)&gt; CGI.escape ‘Di Wen’
=&gt; “Di+Wen”</p>

<h1 id="expecting-di2bwen">expecting “Di%2BWen”</h1>
<p>```</p>

<p>Also failed <code>URI</code> and <code>Addressable</code> by</p>

<p>```ruby
pry(main)&gt; URI.escape ‘Di@Wen’
=&gt; “Di@Wen”</p>

<p>pry(main)&gt; Addressable::URI.parse(“Di@Wen”).normalize
=&gt; #&lt;Addressable::URI:0x81f58abc URI:Di@Wen&gt;</p>

<h1 id="expecting-di40wen">expecting “Di%40Wen”</h1>
<p>```</p>

<p>After some digging into the gem, I’ve found its encoding method</p>

<p>```ruby
# Escape +value+ by URL encoding all non-reserved character.
#
# See Also: {OAuth core spec version 1.0, section 5.1}[http://oauth.net/core/1.0#rfc.section.5.1]
def escape(value)
  URI::escape(value.to_s, OAuth::RESERVED_CHARACTERS)
rescue ArgumentError
  URI::escape(value.to_s.force_encoding(Encoding::UTF_8), OAuth::RESERVED_CHARACTERS)
end</p>

<p>OAuth::RESERVED_CHARACTERS # =&gt; /[^a-zA-Z0-9-._\~]/
```</p>

<p>Following the comment, comes along the OAuth standard specification about <a href="http://oauth.net/core/1.0/#rfc.section.5.1">Parameter Encoding</a></p>

<blockquote>
  <p>All parameter names and values are escaped using the [RFC3986] percent-encoding (%xx) mechanism. Characters not in the unreserved character set ([RFC3986] section 2.3) MUST be encoded. Characters in the unreserved character set MUST NOT be encoded. Hexadecimal characters in encodings MUST be upper case. Text names and values MUST be encoded as UTF-8 octets before percent-encoding them per [RFC3629].</p>
</blockquote>

<blockquote>
  <pre><code>unreserved = ALPHA, DIGIT, '-', '.', '_', '~'
</code></pre>
</blockquote>

<p>Under the standard spec and refering to the gem’s implementation, I’ve finally solved my stupid issue.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASCIIcast of Fundamentals of Design by CodeSchool]]></title>
    <link href="http://blog.ifyouseewendy.com/blog/2014/06/22/asciicast-of-fundamentals-of-design-by-codeschool/"/>
    <updated>2014-06-22T23:35:39+08:00</updated>
    <id>http://blog.ifyouseewendy.com/blog/2014/06/22/asciicast-of-fundamentals-of-design-by-codeschool</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#typeface-classifications">Typeface Classifications</a>    <ul>
      <li><a href="#typefaces">Typefaces</a></li>
      <li><a href="#principles">Principles</a></li>
    </ul>
  </li>
  <li><a href="#font-size-leading--weights">Font Size, Leading &amp; Weights</a></li>
  <li><a href="#line-width--widows">Line-Width &amp; Widows</a>    <ul>
      <li><a href="#line-width-is-measured-in-cpl">Line Width Is Measured in CPL</a></li>
      <li><a href="#save-the-orphans--widows">Save the Orphans &amp; Widows.</a></li>
    </ul>
  </li>
  <li><a href="#color-theory">Color Theory</a>    <ul>
      <li><a href="#hsl">HSL</a></li>
    </ul>
  </li>
  <li><a href="#color-scheme">Color Scheme</a>    <ul>
      <li><a href="#colors">Colors</a></li>
      <li><a href="#schemes">Schemes</a></li>
    </ul>
  </li>
  <li><a href="#color--type">Color &amp; Type</a></li>
  <li><a href="#basic-layout">Basic Layout</a></li>
  <li><a href="#the-grid">The Grid</a>    <ul>
      <li><a href="#fixed-or-fluid">Fixed or Fluid</a></li>
      <li><a href="#example">Example</a></li>
    </ul>
  </li>
  <li><a href="#whitespce--balance">Whitespce &amp; Balance</a></li>
</ul>

<h2 id="typeface-classifications">Typeface Classifications</h2>

<p>Content is king.</p>

<p>What’s your audience?</p>

<p>Find the typeface suits the content well.</p>

<h3 id="typefaces">Typefaces</h3>

<p><strong>Serif</strong></p>

<ul>
  <li>
    <p>Humanist Serif, suits for journalism or historical applications.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h32m05s237.png" alt="Humanist Serif" /></p>
  </li>
  <li>
    <p>Transitional Serif, suits for traditional academia or legal applications.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h32m25s106.png" alt="Transitional Serif" /></p>
  </li>
  <li>
    <p>Modern Serif, suits for arts or culture applications.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h32m36s248.png" alt="Modern Serif" /></p>
  </li>
  <li>
    <p>Egyptian (Slab Serif), suits for marketing or promotional applications.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h32m57s247.png" alt="Egyptian (Slab Serif)" /></p>
  </li>
</ul>

<p><strong>Sans-Serif</strong></p>

<p><em>Sans</em> is the French word for without.</p>

<ul>
  <li>
    <p>Humanist Sans Serif, suits for government or educational applications.  </p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h39m01s9.png" alt="Humanist Sans Serif" /></p>
  </li>
  <li>
    <p>Transitional Sans Serif, suits for technology or transportation applications.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-15h16m50s201.png" alt="Transitional Sans Serif" /></p>
  </li>
  <li>
    <p>Geometric Sans Serif, suits for science or architecture applications.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h42m35s95.png" alt="Geometric Sans Serif" /></p>
  </li>
</ul>

<p><strong>script</strong></p>

<p>Difficult to read, don’t use in body copy.</p>

<p><em>Comic Sans</em> is a script font, not a Sans Serif font. Maybe don’t use it everywhere.</p>

<h3 id="principles">Principles</h3>

<p>Don’t choose two fonts from the same style.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h44m57s130.png" alt="p1" /></p>

<p>Don’t choose two fonts from the same class.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h46m49s85.png" alt="p2" /></p>

<p>When mixing classes, find a similar trait using fonts that share one thing in common but are otherwise different.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h48m11s213.png" alt="p3" />
<img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h48m23s225.png" alt="p4" /></p>

<p>Contrast over Harmony. Keep it the same or change it a lot, look for emphatic differences rather than mushy transitions.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-14h48m52s15.png" alt="p5" /></p>

<h2 id="font-size-leading--weights">Font Size, Leading &amp; Weights</h2>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-16h19m36s197.png" alt="Establish Visual Hierarchy" /></p>

<p>Establish visual relationships between elements on the page is going to allow your users to more quickly process the information.</p>

<p>Use different font size. Huge size is annoying, and 16px is good by suggestion.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-16h21m38s168.png" alt="Font Size" /></p>

<p>Leading is around 120% to 150% of the body copy size.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-16h22m48s94.png" alt="Leading" /></p>

<h2 id="line-width--widows">Line-Width &amp; Widows</h2>

<h3 id="line-width-is-measured-in-cpl">Line Width Is Measured in CPL</h3>

<blockquote>
  <p>Robert Bringhurst in “The elements of Typographic style” recommends 45 to 75 characters per line, 66 characters per line is widely considered the ideal. A width of 600px will hold around 75 characters of 18px text.</p>
</blockquote>

<p>Use <code>max-width</code> to control CPL.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-16h40m13s48.png" alt="CPL" /></p>

<h3 id="save-the-orphans--widows">Save the Orphans &amp; Widows.</h3>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-16h56m47s155.png" alt="widow" /></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-13-16h57m24s123.png" alt="orphan" /></p>

<p>No perfect solution.  </p>

<p>Try tweaking with the font size, weight, line width, and leading to fix the problem.</p>

<h2 id="color-theory">Color Theory</h2>

<ul>
  <li>
    <p>Subtractive Color, using CMYK (Cyan, Megenta, Yellow) color space.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-08h25m21s91.png" alt="CMYK" /></p>
  </li>
  <li>
    <p>Additive Color, using RGB spectrum.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-08h25m57s202.png" alt="RGB" /></p>
  </li>
</ul>

<h3 id="hsl">HSL</h3>

<p>RGB is hard, while human process HSL. Hue, Saturation, Lightness.</p>

<p><strong>Hue</strong></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-08h27m27s79.png" alt="hue" /></p>

<p><strong>Saturation</strong></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-08h28m27s178.png" alt="staturation" /></p>

<p><strong>Lightness</strong></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-08h28m33s232.png" alt="lightness" /></p>

<p>Example</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-08h28m43s70.png" alt="hsl example" /></p>

<p><strong>How to use?</strong></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-08h29m20s189.png" alt="use1" /></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-08h29m22s214.png" alt="use2" /></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-08h29m37s111.png" alt="use3" /></p>

<p><strong>What about HSB, B for brightness?</strong></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-08h29m45s191.png" alt="hsb" /></p>

<h2 id="color-scheme">Color Scheme</h2>

<p>Start by selecting a Base Color.</p>

<p>Keep Culture in Mind.</p>

<p>Build Scheme around Base Color.</p>

<h3 id="colors">Colors</h3>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/%E6%9C%AA%E5%91%BD%E5%90%8D_meitu_0.jpg" alt="colors" /></p>

<h3 id="schemes">Schemes</h3>

<p><strong>Monochromatic</strong></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-13h30m23s77.png" alt="monochromatic" /></p>

<p><strong>Analogous</strong></p>

<p>Analogous color schemes require you have colors with hues that both ascend and descend equally on either side of the base color. They also should be less than 40 degrees from the base.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-13h32m19s227.png" alt="analogous" /></p>

<p><strong>Complementary</strong></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-13h32m17s204.png" alt="complementary" />
<img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-13h31m11s38.png" alt="complementary2" /></p>

<p>Don’t have to be perfect. Use the methods to tweak as needed to fit your project.</p>

<h2 id="color--type">Color &amp; Type</h2>

<p>Typography must have a high degree of contrast between it and its background.</p>

<p>Black and white are the best.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-21h17m52s0.png" alt="black and white" /></p>

<p>Colors that are the same hue but have a very high saturation and lightness contrast are a close second.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-21h17m54s23.png" alt="same hue" /></p>

<p>Some colors are intrinsically difficult for humans to distinguish, such as red, green, blue, and orange.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-21h19m05s218.png" alt="hard distinguish" /></p>

<p>Some colors are light colors, warm colors, like yellow, and some colors are dark colors, cool colors, like blue. So creating contrast in which the yellow is darker than the blue creates a very awkward experience.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-21h22m13s51.png" alt="light and dark colors" /></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-21h21m01s107.png" alt="yellow and blue" /></p>

<p>Making yellow light, and blue dark is much more legible.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-21h22m00s181.png" alt="legible colors" /></p>

<p>Warm and cool colors can be used to create depth, as warm colors appear closer to the screen or to the user. So use cool colors as the background and warm colors as the foreground.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-21h23m52s24.png" alt="warm colors are closer to the user" /></p>

<p>You should combine colors to reinforce <strong>Visual Hierarchy</strong>. As an example, the CodeSchool website get progressively darker as you scroll, which anchors the page and create a more stable viewing experience.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-21h35m30s84.png" alt="codeschool" /></p>

<p>Dont’ be tacky. And treat the image behind the text to make it stand out. </p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-15-21h29m29s200.png" alt="Treat image behind text" /></p>

<h2 id="basic-layout">Basic Layout</h2>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-17-13h40m49s203.png" alt="layout1" /></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-17-13h40m57s24.png" alt="layout2" /></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-17-13h41m06s122.png" alt="layout3" /></p>

<p>Reinforces the <strong>Visual Hierarchy</strong>.</p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-17-13h41m23s22.png" alt="layout4" /></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-17-13h43m31s29.png" alt="layout5" /></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-17-13h47m26s72.png" alt="layout6" /></p>

<h2 id="the-grid">The Grid</h2>

<p>It is made up of a system of horizontal and vetical lines.</p>

<ul>
  <li>
    <p>The vertical lines create columns with gutters in between them that are used to proportionally distribute elements across the page.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-21-02h29m42s176.png" alt="vertical lines" /></p>

    <p>Avoid clutter by respecting the gutters. Don’t put design elements or type in between the columns.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-21-02h41m13s209.png" alt="avoid clutter" /></p>
  </li>
  <li>
    <p>The horizontal lines are used to create a baseline for text that shoudl be equal to the line height.</p>

    <p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-21-02h30m23s114.png" alt="horizontal lines" /></p>
  </li>
</ul>

<p>Use them in Photoshop or another graphics software as a reference when designing.</p>

<h3 id="fixed-or-fluid">Fixed or Fluid</h3>

<ul>
  <li>
    <p>With a fixed grid, the browser can get bigger or smaller, and the grid will remain constant.</p>
  </li>
  <li>
    <p>With a fluid grid, it grows or shrinks with the browser window. And columns are either added or dropped to better serve that size.</p>
  </li>
</ul>

<h3 id="example">Example</h3>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-21-02h38m41s189.png" alt="the grid1" /></p>

<p><img src="https://github.com/ifyouseewendy/ifyouseewendy.github.io/raw/source/image-repo/vlcsnap-2014-06-21-02h38m44s7.png" alt="the grid2" /></p>

<h2 id="whitespce--balance">Whitespce &amp; Balance</h2>

<p>Balance all the things.</p>

<p><strong>Symmetry</strong></p>

<p><strong>Asymmetry</strong></p>

<p>All of the principles together contribute to balance.</p>

]]></content>
  </entry>
  
</feed>
